{"version":3,"file":"/home/chris/Dokumente/Coding/Chrome/mpw-js/es5/setImmediate-polyfill.js","sources":["/home/chris/Dokumente/Coding/Chrome/mpw-js/setImmediate-polyfill.js","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1"],"names":[],"mappings":"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","sourceRoot":"/home/chris/Dokumente/Coding/Chrome/mpw-js/es5/","sourcesContent":["/*! by Tom Thorogood <me@tomthorogood.co.uk> */\n/*! This work is licensed under the Creative Commons Attribution 4.0 International License. To view a copy of this license, visit http://creativecommons.org/licenses/by/4.0/ or see LICENSE. */\n\n// setImmediate is a 0-delay setTimeout of sorts introduced\n// by MS and wrongly held back by other browsers\nwindow.setImmediate || !function (global) {\n\t// Get the global prototype to attach setImmediate to\n\tlet attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t\n\t// If we couldn't get the prototype or setTimeout wasn't attached\n\t// to the prototype we just attach to global\n\tattachTo && attachTo.setTimeout || (attachTo = global);\n\t\n\t// If the MS prefixed implementation exists, use it\n\tif (global.msSetImmediate) {\n\t\treturn attachTo.setImmediate = global.msSetImmediate, attachTo.clearImmediate = global.msClearImmediate;\n\t}\n\t\n\t// https://github.com/YuzuJS/setImmediate/blob/master/setImmediate.js\n\t// This checks if the current environment is Node.js\n\tif (global.process && Object.prototype.toString(global.process) === \"[object process]\") {\n\t\t// If it is we might be able to use timers\n\t\tlet timers = global.require(\"timers\");\n\t\t\n\t\t// If it implements setImmediate we use it\n\t\tif (timers && timers.setImmediate) {\n\t\t\treturn attachTo.setImmediate = timers.setImmediate, attachTo.clearImmediate = timers.clearImmediate;\n\t\t}\n\t\t\n\t\t// If it isn't we polyfill with nextTick which is\n\t\t// sufficiently similar\n\t\tif (global.process.nextTick) {\n\t\t\treturn attachTo.setImmediate = function (func, ...params) {\n\t\t\t\t// Invoke func with the params as passed into setImmediate\n\t\t\t\tglobal.process.nextTick(() => func(...params));\n\t\t\t}, attachTo.clearImmediate = function (immediateID) {\n\t\t\t\t// There is no id or way to stop nextTick\n\t\t\t\tthrow new Error(\"clearImmediate not implemented\");\n\t\t\t};\n\t\t}\n\t}\n\t\n\t// http://dbaron.org/log/20100309-faster-timeouts\n\t// https://github.com/YuzuJS/setImmediate/blob/master/setImmediate.js\n\t// https://github.com/kriskowal/q/blob/0428c15d2ffc8e874b4be3a50e92884ef8701a6f/q.js#L125-141\n\t// If we have messaging channels, or we have postMessage and this\n\t// isn't a WebWorker, we can use messaging\n\tif (global.MessageChannel || global.postMessage && !global.importScripts && (function () {\n\t\t// This checks if global.postMessage is asynchronous,\n\t\t// it has been known to be buggy and synchronous in\n\t\t// some browsers\n\t\tlet postMessageIsAsynchronous = true;\n\t\tlet oldOnMessage = global.onmessage;\n\t\tglobal.onmessage = function () { postMessageIsAsynchronous = false; };\n\t\tglobal.postMessage(\"\", \"*\");\n\t\tglobal.onmessage = oldOnMessage;\n\t\treturn postMessageIsAsynchronous;\n\t})()) {\n\t\t// A unique id prefix to ensure that ONLY valid messages are accepted\n\t\tlet messageName = (\"setImmediate-polyfill-\" + Math.random()).replace(\"0.\", \"\");\n\t\t\n\t\t// The numeric identifier of the next dispatched scrypt call\n\t\tlet immediateID = 1;\n\t\t\n\t\t// The timeout function and arguments, indexed by numeric identifier\n\t\tlet timeouts = { };\n\t\t\n\t\t// If a MessageChannel exists we can use it to avoid sending\n\t\t// messages to the browser which could cause interoperability\n\t\t// issues\n\t\tlet channel = global.MessageChannel && new global.MessageChannel();\n\t\t\n\t\t// We need to start port1 in order to receive messages sent\n\t\t// from port2\n\t\tchannel && channel.port1.start();\n\t\t\n\t\t// Add a handler to the message event of either the message\n\t\t// channel, if it exists, or global if it does not\n\t\t(channel && channel.port1 || global).addEventListener(\"message\", function (event) {\n\t\t\t// Split the identifier into the name and numeric id\n\t\t\tlet [name, immediateID] = event.data.split(\"$\");\n\t\t\t\n\t\t\t// If we are not using a MessageChannel check that the source\n\t\t\t// of the event was this window, also check the name is valid,\n\t\t\t// if either of these are not true, we didn't send it\n\t\t\tif (!channel && event.source !== global || name !== messageName) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// Prevent the event from propagating further\n\t\t\tevent.stopPropagation();\n\t\t\t\n\t\t\t// Retrieve the function and the arguments we will invoke\n\t\t\t// leaving func and params as null if the immediateID\n\t\t\t// does not exist in timeouts (because clearImmediate has\n\t\t\t// been called before we got here)\n\t\t\tlet [func, params] = timeouts[immediateID] || [ ];\n\t\t\t\n\t\t\t// Invoke the func with the appropriate parameters\n\t\t\tfunc && func(...params);\n\t\t\t\n\t\t\t// Clear func and params for GC\n\t\t\tfunc = params = null;\n\t\t\t\n\t\t\t// Remove key:immediateID from timeouts to ensure it's only\n\t\t\t// called once and to allow for GC\n\t\t\tdelete timeouts[immediateID];\n\t\t}, false);\n\t\t\n\t\treturn attachTo.setImmediate = function (func, ...params) {\n\t\t\t// Store the function and it's arguments in timeouts\n\t\t\ttimeouts[immediateID] = [func, params];\n\t\t\t\n\t\t\t// Post the message either using port2 of the MessageChannel\n\t\t\t// or on global if it's not available w/ the unique id\n\t\t\t// If the message is sent on global we dispatch it w/ a\n\t\t\t// targetOrigin of \"*\" (indicating no preference)\n\t\t\t(channel && channel.port2 || global).postMessage([messageName, immediateID].join(\"$\"), ...(channel ? [ ] : [\"*\"]));\n\t\t\t\n\t\t\t// We return a unique numeric id to identify the call\n\t\t\t// to setImmediate, this allows it to be cancelled\n\t\t\treturn immediateID++;\n\t\t}, attachTo.clearImmediate = function (immediateID) {\n\t\t\t// Delete the function and arguments associated\n\t\t\t// w/ identifier of immediateID\n\t\t\tdelete timeouts[immediateID];\n\t\t};\n\t}\n\t\n\t// Set setImmediate to prefixed or non-prefixed requestAnimationFrame\n\t// requestAnimationFrame dispatches at a later point in the event cycle\n\tattachTo.setImmediate = global.requestAnimationFrame || global.mozRequestAnimationFrame || global.webkitRequestAnimationFrame || global.msRequestAnimationFrame;\n\t\n\t// If requestAnimationFrame existed we end, setting clearImmediate\n\t// to cancelAnimationFrame\n\tif (attachTo.setImmediate) {\n\t\treturn attachTo.clearImmediate = global.cancelAnimationFrame || global.mozCancelAnimationFrame || global.webkitCancelAnimationFrame || global.msCancelAnimationFrame || global.webkitCancelRequestAnimationFrame;\n\t}\n\t\n\t// https://github.com/YuzuJS/setImmediate/blob/master/setImmediate.js\n\t// We can use a script tag and the readystatechange event on IE(?)\n\tif (global.document && \"onreadystatechange\" in global.document.getElementsByTagName(\"script\")[0]) {\n\t\t// The numeric identifier of the next dispatched scrypt call\n\t\tlet immediateID = 1;\n\t\t\n\t\t// A boolean value to allow clearImmediate to work,\n\t\t// indexed by numeric identifier\n\t\tlet timeouts = { };\n\t\t\n\t\treturn attachTo.setImmediate = function (func, ...params) {\n\t\t\t// Set true in timeouts for immediateID to indicate the func\n\t\t\t// should be invoked\n\t\t\ttimeouts[immediateID] = true;\n\t\t\t\n\t\t\t// Create a script tag that will be added to the DOM\n\t\t\tlet script = global.document.createElement(\"script\");\n\t\t\t\n\t\t\t// Add a handler for onreadystatechange\n\t\t\tscript.onreadystatechange = function () {\n\t\t\t\t// If the timeout has not been cancelled, call the func\n\t\t\t\t// w/ the arguments specified\n\t\t\t\ttimeouts[immediateID] && func(...params);\n\t\t\t\t\n\t\t\t\t// Remove key:immediateID from timeouts to ensure it's only called once \n\t\t\t\tdelete timeouts[immediateID];\n\t\t\t\t\n\t\t\t\t// Remove the handler to allow GC\n\t\t\t\tscript.onreadystatechange = null;\n\t\t\t\t\n\t\t\t\t// Remove the script tag from the DOM to ensure GC\n\t\t\t\tglobal.document.body.removeChild(script);\n\t\t\t\t\n\t\t\t\t// Nullify the script variable to allow GC\n\t\t\t\tscript = null;\n\t\t\t};\n\t\t\t\n\t\t\t// Add the script tag to the DOM to which begins loading\n\t\t\t// the tag which will invoke the readystatechange event\n\t\t\tglobal.document.body.appendChild(script);\n\t\t\t\n\t\t\t// Return a unique numeric id to identify the call\n\t\t\t// to setImmediate, this allows it to be cancelled\n\t\t\treturn immediateID++;\n\t\t}, attachTo.clearImmediate = function (immediateID) {\n\t\t\t// Remove key:immediateID from timeouts to prevent func from being called\n\t\t\tdelete timeouts[immediateID];\n\t\t};\n\t}\n\t\n\t// The worst fallback is setImmediate, although the delay is set to 0\n\t// in reality this should have a ~20ms delay, this is an important part\n\t// of the spec\n\tattachTo.setImmediate = (func, ...params) => global.setTimeout(func, 0, ...params);\n\tattachTo.clearImmediate = global.clearTimeout;\n\t\n\t// Here we check if the arguments passed to setTimeout actually will be\n\t// passed to the callback, on older versions of IE(?) this check will fail\n\tglobal.setTimeout(function (arg) {\n\t\t// If the test fails, we wrap func in a closure that will invoke func w/\n\t\t// the arguments\n\t\targ || (attachTo.setImmediate = (func, ...params) => global.setTimeout(() => func(...params), 0));\n\t}, 0, true);\n}(this);","\n            for (var $__placeholder__0 = [], $__placeholder__1 = $__placeholder__2;\n                 $__placeholder__3 < arguments.length; $__placeholder__4++)\n              $__placeholder__5[$__placeholder__6 - $__placeholder__7] = arguments[$__placeholder__8];","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]","$traceurRuntime.spread($__placeholder__0)"]}