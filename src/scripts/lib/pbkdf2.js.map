{"version":3,"sources":["../../lib/pbkdf2.js"],"names":[],"mappings":"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","file":"pbkdf2.js","sourcesContent":["/*! by Tom Thorogood <me@tomthorogood.co.uk> */\n/*! This work is licensed under the Creative Commons Attribution 4.0\nInternational License. To view a copy of this license, visit\nhttp://creativecommons.org/licenses/by/4.0/ or see LICENSE. */\n\n// https://bugzilla.mozilla.org/show_bug.cgi?id=554827\nwindow.pbkdf2 = function () {\n\t// https://github.com/golang/crypto/blob/master/pbkdf2/pbkdf2.go\n\tfunction pbkdf2_js(password, salt, iter, keyLen, hash) {\n\t\tswitch ((hash.name || hash).toUpperCase()) {\n\t\t\tcase \"SHA1\":\n\t\t\t\tvar hashLen = 160 / 8;\n\t\t\t\tbreak;\n\t\t\tcase \"SHA224\":\n\t\t\tcase \"SHA-224\":\n\t\t\t\tvar hashLen = 224 / 8;\n\t\t\t\tbreak;\n\t\t\tcase \"SHA256\":\n\t\t\tcase \"SHA-256\":\n\t\t\t\tvar hashLen = 256 / 8;\n\t\t\t\tbreak;\n\t\t\tcase \"SHA384\":\n\t\t\tcase \"SHA-384\":\n\t\t\t\tvar hashLen = 384 / 8;\n\t\t\t\tbreak;\n\t\t\tcase \"SHA512\":\n\t\t\tcase \"SHA-512\":\n\t\t\t\tvar hashLen = 512 / 8;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlet err = new Error(\"A parameter or an operation is not supported by the underlying object\");\n\t\t\t\terr.name = \"InvalidAccessError\";\n\t\t\t\treturn Promise.reject(err);\n\t\t}\n\t\t\n\t\tlet numBlocks = ((keyLen + hashLen - 1) / hashLen) | 0;\n\t\t\n\t\tlet data     = new Uint8Array(salt.length + 4/*sizeof(uint32)*/);\n\t\tlet dataView = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\t\t\n\t\tdata.set(salt);\n\t\t\n\t\treturn window.crypto.subtle.importKey(\"raw\", password, {\n\t\t\t\tname: \"HMAC\",\n\t\t\t\thash: hash\n\t\t\t}, false/*not extractable*/, [ \"sign\" ]).then(function (key) {\n\t\t\t\tlet dk = new Uint8Array(numBlocks * hashLen);\n\t\t\t\tlet x = Promise.resolve();\n\t\t\t\t\n\t\t\t\tfor (let block = 1, dki = 0; block <= numBlocks; block++, dki += hashLen) {\n\t\t\t\t\tx = x.then(() => dataView.setUint32(salt.length, block, false/*big-endian*/))\n\t\t\t\t\t\t.then(() => window.crypto.subtle.sign({\n\t\t\t\t\t\t\tname: \"HMAC\",\n\t\t\t\t\t\t\thash: hash\n\t\t\t\t\t\t}, key, data))\n\t\t\t\t\t\t.then(pdk => (dk.set(new Uint8Array(pdk), dki), pdk));\n\t\t\t\t\t\n\t\t\t\t\tfor (let n = 2; n <= iter; n++) {\n\t\t\t\t\t\tx = x.then(U => window.crypto.subtle.sign({\n\t\t\t\t\t\t\t\tname: \"HMAC\",\n\t\t\t\t\t\t\t\thash: hash\n\t\t\t\t\t\t\t}, key, U)).then(function (U) {\n\t\t\t\t\t\t\t\tlet Ux = new Uint8Array(U);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor (let i = 0; i < Ux.length; i++) {\n\t\t\t\t\t\t\t\t\tdk[dki + i] ^= Ux[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn U;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn x.then(() => dk.subarray(0, keyLen));\n\t\t\t});\n\t}\n\t\n\tif (window.crypto.subtle) {\n\t\treturn function (password, salt, iter, keyLen, hash) {\n\t\t\tlet self = this;\n\t\t\tlet args = arguments;\n\t\t\t\n\t\t\treturn window.crypto.subtle.importKey(\"raw\", password, {\n\t\t\t\t\tname: \"PBKDF2\",\n\t\t\t\t\thash: hash\n\t\t\t\t}, false/*not extractable*/, [ \"deriveBits\" ])\n\t\t\t\t.then(key => window.crypto.subtle.deriveBits({\n\t\t\t\t\tname: \"PBKDF2\",\n\t\t\t\t\tsalt: salt,\n\t\t\t\t\titerations: iter,\n\t\t\t\t\thash: hash\n\t\t\t\t}, key, keyLen * 8))\n\t\t\t\t.then(key => new Uint8Array(key))\n\t\t\t\t.catch(err =>\n\t\t\t\t\t// PBKDF2-HMAC is not supported by the Web Crytpto API if either a\n\t\t\t\t\t// NotSupportedError or a OperationError are emmited\n\t\t\t\t\t(err.name === \"OperationError\" || err.name === \"NotSupportedError\")\n\t\t\t\t\t\t? (window.pbkdf2 = pbkdf2_js).apply(self, args)\n\t\t\t\t\t\t// Limited support for PBKDF2-HMAC-SHA exists if InvalidAccessError\n\t\t\t\t\t\t// is emmited for PBKDF2-HMAC-SHA{256,384,512}\n\t\t\t\t\t\t: (err.name === \"InvalidAccessError\")\n\t\t\t\t\t\t\t? pbkdf2_js.apply(self, args)\n\t\t\t\t\t\t\t: Promise.reject(err));\n\t\t};\n\t} else {\n\t\treturn function (password, salt, iter, keyLen, hash) {\n\t\t\tswitch ((hash.name || hash).toUpperCase()) {\n\t\t\t\tcase \"SHA1\":\n\t\t\t\t\tvar hashAlg = CryptoJS.algo.SHA;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"SHA224\":\n\t\t\t\tcase \"SHA-224\":\n\t\t\t\t\tvar hashAlg = CryptoJS.algo.SHA224;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"SHA256\":\n\t\t\t\tcase \"SHA-256\":\n\t\t\t\t\tvar hashAlg = CryptoJS.algo.SHA256;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"SHA384\":\n\t\t\t\tcase \"SHA-384\":\n\t\t\t\t\tvar hashAlg = CryptoJS.algo.SHA384;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"SHA512\":\n\t\t\t\tcase \"SHA-512\":\n\t\t\t\t\tvar hashAlg = CryptoJS.algo.SHA512;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet err = new Error(\"A parameter or an operation is not supported by the underlying object\");\n\t\t\t\t\terr.name = \"InvalidAccessError\";\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t}\n\t\t\t\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t// setImmediate (a 0-delay setTimeout of sorts) is needed\n\t\t\t\t// here so that this code is asynchronous and will not block\n\t\t\t\t// the UI thread\n\t\t\t\twindow.setImmediate(function () {\n\t\t\t\t\t// Create crypto-js WordArrays from Uint8Arrays password and salt\n\t\t\t\t\tpassword = CryptoJS.lib.WordArray.create(password);\n\t\t\t\t\tsalt     = CryptoJS.lib.WordArray.create(salt);\n\t\t\t\t\t\n\t\t\t\t\t// Derive key using PBKDF2 w/ password and salt\n\t\t\t\t\tlet Ckey = CryptoJS.PBKDF2(password, salt, {\n\t\t\t\t\t\tkeySize: keyLen*8/32,\n\t\t\t\t\t\titerations: iter,\n\t\t\t\t\t\thasher: hashAlg\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// Create key array and a DataView representing it\n\t\t\t\t\tlet key     = new Uint8Array(Ckey.words.length * 4/*sizeof(int32)*/);\n\t\t\t\t\tlet keyView = new DataView(key.buffer, key.byteOffset, key.byteLength);\n\t\t\t\t\t\n\t\t\t\t\t// Loop over Ckey.words which are INT32\n\t\t\t\t\tfor (let i = 0; i < Ckey.words.length; i++) {\n\t\t\t\t\t\t// Set key[i*4,i*4+4] to Ckey.words[i] INT32 in big-endian form\n\t\t\t\t\t\tkeyView.setInt32(i * 4/*sizeof(int32)*/, Ckey.words[i], false/*big-endian*/);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Return the key Uint8Array\n\t\t\t\t\tresolve(key);\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t}\n}();"]}